<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3aabc380-3d58-4d1d-9238-5d507f5fcda8" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2O861jSBddScX7s5RYnXz931kB5" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "last_opened_file_path": "D:/SpringBootTesting/3.00-starting-project"
  }
}]]></component>
  <component name="RunManager" selected="JUnit.ReflectionTestUtilsTest.getPrivateMethod">
    <configuration name="MockAnnotationTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="spring-boot-unit-testing-demo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.luv2code.test" />
      <option name="MAIN_CLASS_NAME" value="com.luv2code.test.MockAnnotationTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MockAnnotationTest.consectiveCalls" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="spring-boot-unit-testing-demo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.luv2code.test" />
      <option name="MAIN_CLASS_NAME" value="com.luv2code.test.MockAnnotationTest" />
      <option name="METHOD_NAME" value="consectiveCalls" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTestUtilsTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="spring-boot-unit-testing-demo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.luv2code.test" />
      <option name="MAIN_CLASS_NAME" value="com.luv2code.test.ReflectionTestUtilsTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTestUtilsTest.getPrivateFiels" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="spring-boot-unit-testing-demo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.luv2code.test" />
      <option name="MAIN_CLASS_NAME" value="com.luv2code.test.ReflectionTestUtilsTest" />
      <option name="METHOD_NAME" value="getPrivateFiels" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTestUtilsTest.getPrivateMethod" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="spring-boot-unit-testing-demo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.luv2code.test" />
      <option name="MAIN_CLASS_NAME" value="com.luv2code.test.ReflectionTestUtilsTest" />
      <option name="METHOD_NAME" value="getPrivateMethod" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.ReflectionTestUtilsTest.getPrivateMethod" />
        <item itemvalue="JUnit.ReflectionTestUtilsTest" />
        <item itemvalue="JUnit.ReflectionTestUtilsTest.getPrivateFiels" />
        <item itemvalue="JUnit.MockAnnotationTest" />
        <item itemvalue="JUnit.MockAnnotationTest.consectiveCalls" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3aabc380-3d58-4d1d-9238-5d507f5fcda8" name="Changes" comment="" />
      <created>1680929653898</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1680929653898</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/com/luv2code/test/MockAnnotationTest.java</url>
          <line>21</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/test/java/com/luv2code/test/ReflectionTestUtilsTest.java</url>
          <line>45</line>
          <properties class="com.luv2code.test.ReflectionTestUtilsTest" method="getPrivateFiels">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>